/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// General configuration options
//

process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
    withName: FASTQC_RAW {
        ext.args = '--quiet'
        ext.prefix = { "${meta.id}_raw_fastqc" }
        publishDir = [
            path: { "${params.outdir}/fastqc_raw/" },
            enabled: true,
            pattern: '*.zip'
        ]
    }
    withName: FASTQC_TRIMMED {
        ext.args = '--quiet'
        ext.prefix = { "${meta.id}_${name}_trimmed_fastqc" }
        publishDir = [
            path: { "${params.outdir}/fastqc_trimmed/" },
            enabled: true,
            pattern: '*.zip'
        ]
    }

    withName: 'CUTADAPT' {
        ext.args    = { "-b file:${params.adapter_fasta} -B file:${params.adapter_fasta}" }
        publishDir  = [
            enabled: false
        ]
    }

    withName: FASTP {
        ext.args = [
            "--cut_front",
            "--cut_tail",
            "--detect_adapter_for_pe", 
        ].join(' ').trim()
        publishDir = [
            enabled: false
        ]
    }

    withName: ADAPTERREMOVAL {
        ext.args = ''
        publishDir = [
            enabled: false
        ]
    }

    withName: FAQCS {
        ext.args = {"--artifactFile ${params.adapter_fasta}"}
        publishDir = [
            enabled: false
        ]
    }

    withName: SICKLE {
        ext.args = ''
        publishDir = [
            enabled: false
        ]
    }

    // withName: TRIMGALORE {
    //     ext.args = ''
    //     publishDir = [
    //         enabled: false
    //     ]
    // }
    
    withName: TRIMMOMATIC {
        ext.args = {"ILLUMINACLIP:${params.adapter_fasta}:2:30:10"}
        publishDir = [
            enabled: false
        ]
    }

    withName: BBMAP_BBDUK {
        ext.args = ''
        publishDir = [
            enabled: false
        ]
    }

    withName: PRINSEQPLUSPLUS {
        ext.args = ''
        publishDir = [
            enabled: false
        ]
    }

    withName: BOWTIE2_ALIGN {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/bowtie2/" },
            mode: params.publish_dir_mode,
            pattern: '*.{log}'
        ]
    }

    withName: SPADES {
        ext.args = '--rnaviral'
        publishDir =  [
            path: { "${params.outdir}/spades/" },
            mode: params.publish_dir_mode,
            pattern: '*.{fa.gz}'
        ]
    }

    withName: QUAST {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/quast/" },
            mode: params.publish_dir_mode,
            pattern: '*.{tsv}'
        ]
    }

    withName: MULTIQC {
        ext.args   = ""
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}


